<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hary.dao.GoodsDao">

    <select id="getGoodsCount" resultType="Integer">
        select COUNT(*)
        from goods where shop_id = #{shopId}
    </select>

    <select id="getWarningStore" resultType="Integer">
        select COUNT(*)
        from goods where shop_id = #{shopId} and store_quantity &lt; 20
    </select>

    <select id="getZeroStore" resultType="Integer">
        select COUNT(*)
        from goods where shop_id = #{shopId} and store_quantity = 0
    </select>

    <resultMap id="storeGoods" type="Goods">
        <id property="goodsId" column="goods_id"/>
        <result property="goodsName" column="goods_name"/>
        <result property="goodsAvatar" column="goods_avatar"/>
        <result property="storeQuantity" column="store_quantity"/>
    </resultMap>
    <select id="getStoreList" resultMap="storeGoods">
        select goods_id,goods_name,goods_avatar,store_quantity
        from goods where shop_id = #{shopId}
        <if test="condition != null and condition != 0">
            and store_quantity &lt; #{condition}
        </if>
        <if test="condition != null">
            and store_quantity = #{condition}
        </if>
    </select>

    <update id="updateStore">
        update goods set goods_name = #{goodsName},store_quantity = #{storeQuantity} where goods_id = #{goodsId}
    </update>

    <select id="getGoodsByName" resultType="Goods">
        select *
        from goods where shop_id = #{shopId}
        <if test="goodsName != null">
            and goods_name like CONCAT('%',#{goodsName},'%')
        </if>
    </select>

    <select id="getGoodsByState" resultType="Goods">
        select *
        from goods where shop_id = #{shopId} and goods_state = #{goodsState}
    </select>

    <delete id="deleteGoods">
        delete from goods where goods_id = #{goodsId}
    </delete>

    <update id="updateState">
        update goods set goods_state = #{goodsState} where goods_id = #{goodsId}
    </update>

    <insert id="addGoods">
        insert into goods(goods_name, goods_avatar, selling_way, unit_price, box_size, box_price, subordinated_rate, origin_place, goods_state, shop_id, good_stuff) VALUES(#{goods.goodsName},#{goods.goodsAvatar},#{goods.sellingWay},#{goods.unitPrice},#{goods.boxSize},#{goods.boxPrice},#{goods.subordinatedRate},#{goods.originPlace},#{goods.goodsState},#{goods.shopId},#{goods.goodStuff})
    </insert>

    <update id="updateGoods">
        update goods set goods_name = #{goods.goodsName},goods_avatar = #{goods.goodsAvatar},selling_way = #{goods.sellingWay},unit_price = #{goods.unitPrice},box_size = #{goods.boxSize},box_price = #{goods.boxPrice},subordinated_rate = #{goods.subordinatedRate},origin_place = #{goods.originPlace},goods_state = #{goods.goodsState},shop_id = #{goods.shopId},good_stuff = #{goods.goodStuff} where goods_id = #{goods.goodsId}
    </update>

    <select id="getCountOnSale" resultType="Integer">
        select COUNT(*)
        from goods where shop_id = #{shopId} and goods_state = 1
    </select>

    <select id="getGoodsDetail" resultType="Goods">
        select goods_name, goods_avatar, main_category, secondary_category, selling_way, unit_price, box_size, box_price, subordinated_rate, origin_place, shop_id, good_stuff, goods_state
        from goods where goods_id = #{goodsId}
    </select>
</mapper>